{"version":3,"sources":["components/GeneralPreview.js","components/General.js","components/EducationPreview.js","components/Education.js","components/WorkPreview.js","components/Work.js","App.js","index.js"],"names":["GeneralPreview","props","data","name","location","email","phone","website","General","state","isEdit","handleChange","bind","handleClick","e","target","id","value","this","setState","preventDefault","prevState","className","type","placeholder","onChange","pattern","onClick","React","Component","EducationPreview","school","city","degree","schoolStart","schoolEnd","Education","educationInputs","addEducation","dataset","map","val","idx","schoolId","cityId","degreeId","schoolStartId","schoolEndId","data-id","WorkPreview","company","position","jobDescription","jobStart","jobEnd","Work","workInputs","addWork","companyId","positionId","jobDescriptionId","jobStartId","jobEndId","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ce914df.chunk.js","sourcesContent":["import React from \"react\"\n\nexport default function GeneralPreview(props) {\n    return(\n        <div>\n            <h2>{props.data.name}</h2>\n            <p>{props.data.location}</p>\n            <p>{props.data.email}</p>\n            <p>{props.data.phone}</p>\n            <p>{props.data.website}</p>\n        </div>\n    \n    )\n}","import React from \"react\";\nimport GeneralPreview from \"./GeneralPreview\"\n\nexport default class General extends React.Component {\n    constructor(){\n        super()\n        this.state = {\n            name: '',\n            location: '',\n            email: '',\n            phone: '',\n            website: '',\n            isEdit: true\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleChange(e){\n        const { id, value} = e.target\n        this.setState({[id]: value})\n    }\n\n    handleClick(e) {\n        e.preventDefault()\n        this.setState((prevState) => ({isEdit: !prevState.isEdit}))\n    }\n\n    render(){\n    return (\n        <div className=\"container\">\n            <h2>General Information</h2>\n            <hr />\n            <div className={this.state.isEdit ? '' : 'hidden'}>\n                <div>\n                <form>\n                    <input \n                        type=\"text\" \n                        id=\"name\" \n                        placeholder=\"Name\" \n                        value={this.state.name}\n                        onChange={this.handleChange}\n                        />\n                    <input \n                        type=\"text\" \n                        id=\"location\" \n                        placeholder=\"Location\" \n                        value={this.state.location}\n                        onChange={this.handleChange}\n                        />\n                    <input \n                        type=\"email\" \n                        id=\"email\" \n                        placeholder=\"Email\" \n                        value={this.state.email}\n                        onChange={this.handleChange}\n                        />\n                    <input \n                        type=\"tel\" \n                        id=\"phone\" \n                        placeholder=\"Phone Number\" \n                        pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\" \n                        value={this.state.phone}\n                        onChange={this.handleChange}\n                        />\n                    <input \n                        type=\"text\" \n                        id=\"website\" \n                        placeholder=\"Website\" \n                        value={this.state.website}\n                        onChange={this.handleChange}\n                        />\n                    <button onClick={this.handleClick}>Save</button>\n                </form>\n                </div>\n            </div>\n            <div className={this.state.isEdit ? 'hidden' : ''}>\n                <GeneralPreview data={this.state} />\n                <button onClick={this.handleClick}>Edit</button>\n            </div>\n        </div>\n    )}\n}","import React from \"react\"\n\nexport default function EducationPreview(props) {\n    return(\n        <div>\n            <h2>{props.data.school}</h2>\n            <p>{props.data.city}</p>\n            <h3>{props.data.degree}</h3>\n            <p>{props.data.schoolStart} to {props.data.schoolEnd}</p>\n        </div>\n    )\n}","import React from \"react\";\nimport EducationPreview from \"./EducationPreview\"\n\nexport default class Education extends React.Component {\n    constructor(){\n        super()\n        this.state={\n            educationInputs: [{\n                school: '',\n                city: '',\n                degree: '',\n                schoolStart: '',\n                schoolEnd: '',\n                isEdit: true\n            }]\n            \n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.addEducation = this.addEducation.bind(this)\n        this.handleClick = this.handleClick.bind(this)\n        // this.handleDelete = this.handleDelete.bind(this)\n    }\n\n    handleChange(e){\n        let educationInputs = [...this.state.educationInputs]\n        educationInputs[e.target.dataset.id][e.target.className] = e.target.value\n        this.setState({educationInputs})\n    }\n    addEducation(e) {\n        this.setState((prevState) => ({\n            educationInputs: [...prevState.educationInputs, \n                {school: '',\n                city: '',\n                degree: '',\n                schoolStart: '',\n                schoolEnd: '',\n                isEdit: true\n                }\n        ]}))\n    }\n    handleClick(e) {\n        e.preventDefault()\n        let educationInputs = [...this.state.educationInputs]\n        educationInputs[e.target.id].isEdit = !this.state.educationInputs[e.target.id].isEdit\n        this.setState({educationInputs})\n    }\n    // Need to figure out delate functionality, currently bugs out preview after deleting\n    //\n    // handleDelete(e) {\n    //     e.preventDefault()\n    //     let educationInputs = this.state.educationInputs.splice(e.target.id, 1)\n    //     this.setState({educationInputs})\n    // }\n\n    render() {\n        let {educationInputs} = this.state\n        return (\n            <div className=\"container\">\n                <h2>Education</h2>\n                <hr />\n                <div>\n                    <button onClick={this.addEducation}>Add Education</button>\n                    {\n                        educationInputs.map((val, idx) => {\n                            let schoolId = `school-${idx}`,\n                                cityId = `city-${idx}`,\n                                degreeId = `degree-${idx}`,\n                                schoolStartId = `schoolStart-${idx}`,\n                                schoolEndId = `schoolEndId-${idx}`\n                            \n                            return( \n                                <div key={idx}>\n                                <div>\n                                <form onChange={this.handleChange} className={educationInputs[idx].isEdit ? '' : 'hidden'}>\n                                    <input \n                                        type=\"text\" \n                                        id={schoolId}\n                                        data-id={idx}\n                                        placeholder=\"School\"\n                                        className=\"school\" \n                                        />\n                                    <input \n                                        type=\"text\" \n                                        id={cityId} \n                                        data-id={idx}\n                                        placeholder=\"City\" \n                                        className=\"city\"\n                                        />\n                                    <input \n                                        type=\"text\" \n                                        id={degreeId} \n                                        data-id={idx}\n                                        placeholder=\"Degree\" \n                                        className=\"degree\"\n                                        /> \n                                    <input \n                                        type=\"text\" \n                                        id={schoolStartId} \n                                        data-id={idx}\n                                        placeholder=\"From\"\n                                        className=\"schoolStart\"\n                                        />\n                                    <input \n                                        type=\"text\"                                         \n                                        id={schoolEndId}\n                                        data-id={idx}\n                                        placeholder=\"To\" \n                                        className=\"schoolEnd\"\n                                        />\n                                    {/* <button id={idx} onClick={this.handleDelete}>Delete</button> */}\n                                    <button id={idx} onClick={this.handleClick}>Save</button>\n                                </form>\n                                </div>\n                                <div className={educationInputs[idx].isEdit ? 'hidden' : ''}>\n                                    <EducationPreview data={educationInputs[idx]} />\n                                    <button id={idx} onClick={this.handleClick}>Edit</button>\n                                </div>\n                            </div>\n                            )\n                        })\n                    }\n                </div>\n            </div>\n        )}\n    }","import React from \"react\"\n\nexport default function WorkPreview(props) {\n    return(\n        <div>\n            <h2>{props.data.company}</h2>\n            <h3>{props.data.position}</h3>\n            <p>{props.data.jobDescription}</p>\n            <p>{props.data.jobStart} to {props.data.jobEnd}</p>\n        </div>\n    )\n}","import React from \"react\";\nimport WorkPreview from \"./WorkPreview\"\n\nexport default class Work extends React.Component {\n    constructor(){\n        super()\n        this.state={\n            workInputs: [{\n                company: '',\n                position: '',\n                jobDescription: '',\n                jobStart: '',\n                jobEnd: '',\n                isEdit: true\n            }]\n            \n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.addWork = this.addWork.bind(this)\n        this.handleClick = this.handleClick.bind(this)\n    }\n\n    handleChange(e){\n        let workInputs = [...this.state.workInputs]\n        workInputs[e.target.dataset.id][e.target.className] = e.target.value\n        this.setState({workInputs})\n    }\n    addWork(e) {\n        this.setState((prevState) => ({\n            workInputs: [...prevState.workInputs,\n                {\n                company: '',\n                position: '',\n                jobDescription: '',\n                jobStart: '',\n                jobEnd: '',\n                isEdit: true\n                }\n            ]\n        }))\n    }\n    handleClick(e) {\n        e.preventDefault()\n        let workInputs = [...this.state.workInputs]\n        workInputs[e.target.id].isEdit = !this.state.workInputs[e.target.id].isEdit\n        this.setState({workInputs})\n    }\n\n    render() {\n        let {workInputs} = this.state\n        return (\n            <div className=\"container\">\n                <h2>Work Experience</h2>\n                <hr />\n                <div>\n                    <button onClick={this.addWork}>Add Work</button>\n                    {\n                        workInputs.map((val, idx) => {\n                            let companyId = `company-${idx}`,\n                                positionId = `position-${idx}`,\n                                jobDescriptionId = `jobDescription-${idx}`,\n                                jobStartId = `jobStart-${idx}`,\n                                jobEndId = `jobEndId-${idx}`\n                        \n                            return(\n                                <div key={idx}>\n                                <div>\n                                <form onChange={this.handleChange} className={workInputs[idx].isEdit ? '' : 'hidden'}>\n                                    <input \n                                        type=\"text\" \n                                        id={companyId}\n                                        data-id={idx}\n                                        className=\"company\"\n                                        placeholder=\"Company Name\" \n                                        />\n                                    <input \n                                        type=\"text\" \n                                        id={positionId}\n                                        data-id={idx}\n                                        className=\"position\"\n                                        placeholder=\"Position Title\" \n                                        />\n                                    <textarea  \n                                        id={jobDescriptionId}\n                                        data-id={idx}\n                                        className=\"jobDescription\"\n                                        placeholder=\"Job Description\" \n                                        />\n                                    <input \n                                        type=\"text\" \n                                        id={jobStartId}\n                                        data-id={idx}\n                                        className=\"jobStart\"\n                                        placeholder=\"From\"\n                                        />\n                                    <input \n                                        type=\"text\" \n                                        id={jobEndId}\n                                        data-id={idx}  \n                                        className=\"jobEnd\"                          \n                                        placeholder=\"To\"\n                                        />\n                                    <button id={idx} onClick={this.handleClick}>Save</button>\n                                </form>\n                                </div>\n                                <div className={workInputs[idx].isEdit ? 'hidden' : ''}>\n                                    <WorkPreview data={workInputs[idx]} />\n                                    <button id={idx} onClick={this.handleClick}>Edit</button>\n                                </div>\n                            </div>\n                    )\n                })\n            }\n            </div>\n            </div>\n        )\n    }\n}","import General from \"./components/General\";\nimport Education from \"./components/Education\";\nimport Work from \"./components/Work\";\n\nexport default function App() {\n  return (\n    <div>\n        <header><h1>CV Generator</h1></header>\n        <main>\n          <General />\n          <Education />\n          <Work />\n        </main>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}